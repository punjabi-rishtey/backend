{
  "openapi": "3.0.0",
  "info": {
    "title": "Punjabi Rishtey Matrimony API",
    "version": "1.0.0",
    "description": "API documentation for user and admin panel"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local server"
    }
  ],
  "paths": {
    "/api/users/me": {
      "delete": {
        "summary": "Delete current user's account and data",
        "tags": ["Users"],
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": { "description": "Account deleted successfully" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/api/admin/auth/register": {
      "post": {
        "summary": "Register a new admin",
        "tags": ["Admin"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Admin registered successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/admin/auth/login": {
      "post": {
        "summary": "Admin login",
        "tags": ["Admin"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admin/auth/dashboard": {
      "get": {
        "summary": "Get admin dashboard statistics",
        "tags": ["Admin"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Admin dashboard data retrieved successfully"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admin/auth/users/{status}": {
      "get": {
        "summary": "Get users by status",
        "tags": ["Admin"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "status",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The status of users (approved, pending, expired, canceled)"
          }
        ],
        "responses": {
          "200": {
            "description": "Users fetched successfully"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admin/auth/users/approve/{id}": {
      "put": {
        "summary": "Approve a user",
        "tags": ["Admin"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user to approve"
          }
        ],
        "responses": {
          "200": {
            "description": "User approved successfully"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admin/auth/users/block/{id}": {
      "put": {
        "summary": "Block a user",
        "tags": ["Admin"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user to block"
          }
        ],
        "responses": {
          "200": {
            "description": "User blocked successfully"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admin/auth/users/edit/{id}": {
      "put": {
        "summary": "Edit user details",
        "tags": ["Admin"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user to edit"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "about_myself": {
                    "type": "string",
                    "description": "About Myself",
                    "maxLength": 300
                  },
                  "looking_for": {
                    "type": "string",
                    "description": "I am looking for",
                    "maxLength": 300
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User details updated successfully"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admin/auth/users/add": {
      "post": {
        "summary": "Add a new user from admin panel",
        "tags": ["Admin"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "about_myself": {
                    "type": "string",
                    "description": "About Myself",
                    "maxLength": 300
                  },
                  "looking_for": {
                    "type": "string",
                    "description": "I am looking for",
                    "maxLength": 300
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User added successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/admin/auth/dashboard/registrations": {
      "get": {
        "summary": "Get monthly user registrations data",
        "tags": ["Admin"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Monthly registration data retrieved successfully"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admin/auth/dashboard/status-counts": {
      "get": {
        "summary": "Get user status counts",
        "tags": ["Admin"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User status counts retrieved successfully"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/astrologies/": {
      "post": {
        "summary": "Add astrology details",
        "tags": ["Astrology"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rashi": {
                    "type": "string"
                  },
                  "nakshatra": {
                    "type": "string"
                  },
                  "gotra": {
                    "type": "string"
                  },
                  "mangalik": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Astrology details added successfully"
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/api/astrologies/{userId}": {
      "get": {
        "summary": "Get astrology details for a user",
        "tags": ["Astrology"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user whose astrology details are to be retrieved"
          }
        ],
        "responses": {
          "200": {
            "description": "Astrology details retrieved successfully"
          },
          "404": {
            "description": "Astrology details not found"
          }
        }
      },
      "put": {
        "summary": "Update astrology details",
        "tags": ["Astrology"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user whose astrology details are to be updated"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rashi": {
                    "type": "string"
                  },
                  "nakshatra": {
                    "type": "string"
                  },
                  "gotra": {
                    "type": "string"
                  },
                  "mangalik": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Astrology details updated successfully"
          },
          "400": {
            "description": "Invalid request data"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/educations/": {
      "post": {
        "summary": "Add education details",
        "tags": ["Education"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "degree": {
                    "type": "string"
                  },
                  "field_of_study": {
                    "type": "string"
                  },
                  "university": {
                    "type": "string"
                  },
                  "graduation_year": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Education details added successfully"
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/api/educations/{userId}": {
      "get": {
        "summary": "Get education details for a user",
        "tags": ["Education"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user whose education details are to be retrieved"
          }
        ],
        "responses": {
          "200": {
            "description": "Education details retrieved successfully"
          },
          "404": {
            "description": "Education details not found"
          }
        }
      },
      "put": {
        "summary": "Update education details",
        "tags": ["Education"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user whose education details are to be updated"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "degree": {
                    "type": "string"
                  },
                  "field_of_study": {
                    "type": "string"
                  },
                  "university": {
                    "type": "string"
                  },
                  "graduation_year": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Education details updated successfully"
          },
          "400": {
            "description": "Invalid request data"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/families/": {
      "post": {
        "summary": "Add family details",
        "tags": ["Families"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "father_name": {
                    "type": "string"
                  },
                  "mother_name": {
                    "type": "string"
                  },
                  "siblings": {
                    "type": "number"
                  },
                  "family_type": {
                    "type": "string"
                  },
                  "occupation": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Family details added successfully"
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/api/families/{userId}": {
      "get": {
        "summary": "Get family details for a user",
        "tags": ["Families"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user whose family details are to be retrieved"
          }
        ],
        "responses": {
          "200": {
            "description": "Family details retrieved successfully"
          },
          "404": {
            "description": "Family details not found"
          }
        }
      },
      "put": {
        "summary": "Update family details",
        "tags": ["Families"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user whose family details are to be updated"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "father_name": {
                    "type": "string"
                  },
                  "mother_name": {
                    "type": "string"
                  },
                  "siblings": {
                    "type": "number"
                  },
                  "family_type": {
                    "type": "string"
                  },
                  "occupation": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Family details updated successfully"
          },
          "400": {
            "description": "Invalid request data"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/professions/": {
      "post": {
        "summary": "Add profession details",
        "tags": ["Professions"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "occupation": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "salary": {
                    "type": "number"
                  },
                  "experience": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Profession details added successfully"
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/api/professions/{userId}": {
      "get": {
        "summary": "Get profession details for a user",
        "tags": ["Professions"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user whose profession details are to be retrieved"
          }
        ],
        "responses": {
          "200": {
            "description": "Profession details retrieved successfully"
          },
          "404": {
            "description": "Profession details not found"
          }
        }
      },
      "put": {
        "summary": "Update profession details",
        "tags": ["Professions"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user whose profession details are to be updated"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "occupation": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "salary": {
                    "type": "number"
                  },
                  "experience": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profession details updated successfully"
          },
          "400": {
            "description": "Invalid request data"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/users/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "summary": "User login",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/users/search": {
      "get": {
        "summary": "Search for potential matches",
        "tags": ["Users"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "gender",
            "schema": {
              "type": "string"
            },
            "description": "Gender of the match"
          },
          {
            "in": "query",
            "name": "religion",
            "schema": {
              "type": "string"
            },
            "description": "Religion of the match"
          },
          {
            "in": "query",
            "name": "marital_status",
            "schema": {
              "type": "string"
            },
            "description": "Marital status of the match"
          }
        ],
        "responses": {
          "200": {
            "description": "List of matching profiles"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Get user profile by ID",
        "tags": ["Users"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update user profile",
        "tags": ["Users"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "gender": {
                    "type": "string"
                  },
                  "dob": {
                    "type": "string",
                    "format": "date"
                  },
                  "about_myself": {
                    "type": "string",
                    "description": "About Myself",
                    "maxLength": 300
                  },
                  "looking_for": {
                    "type": "string",
                    "description": "I am looking for",
                    "maxLength": 300
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/users/{id}/upload": {
      "post": {
        "summary": "Upload profile pictures",
        "tags": ["Users"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "profile_pictures": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Images uploaded successfully"
          },
          "400": {
            "description": "No files uploaded"
          }
        }
      }
    },
    "/api/users/{id}/delete-picture": {
      "delete": {
        "summary": "Delete a profile picture",
        "tags": ["Users"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "imagePath": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Image deleted successfully"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "summary": "Logout user",
        "tags": ["Users"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/users/forgot-password": {
      "post": {
        "summary": "Send password reset email",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/users/reset-password/{token}": {
      "post": {
        "summary": "Reset user password",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Password reset token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful"
          },
          "400": {
            "description": "Invalid or expired token"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    {
      "name": "Admin",
      "description": "APIs for Admin Management"
    },
    {
      "name": "Astrology",
      "description": "APIs related to user astrology details"
    },
    {
      "name": "Education",
      "description": "APIs related to user education details"
    },
    {
      "name": "Families",
      "description": "APIs related to user family details"
    },
    {
      "name": "Professions",
      "description": "APIs related to user profession details"
    },
    {
      "name": "Users",
      "description": "API endpoints for user management"
    }
  ]
}
